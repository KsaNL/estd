<?xml version="1.0" encoding="utf-8"?>
<!--
.natvis for Visual Studio debugger.

XML file must escape these characters 
{ [<]&lt;  [>]&gt;  [&]&amp;  ["]&quot;  [']&apos;  [\n]&#xa; }
in both the item body and the condition statements, you can get more details here:
https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019

BasicType: 
https://learn.microsoft.com/en-us/visualstudio/debugger/format-specifiers-in-cpp?view=vs-2019
	d | int
	u | uint
	s | string
	x/X | Up-HEX
	s8 | UTF-8 string
	su | Unicode string
	
	hr | HRESULT  S_OK
	wm | WindowsMessage WM_CLOSE
	wc | WindowClass like WC_DEFAULTCHAR
	
To enable:
* include file in your VS project (most recommended: not intrusive and always kept up to date!)
* or copy in %USERPROFILE%\Documents\Visual Studio XXXX\Visualizers (current user)
* or copy in %VsInstallDirectory%\Common7\Packages\Debugger\Visualizers (all users)

<DisplayString>unless</DisplayString> ...ok (no expression)
<DisplayString>{{ [{p,s8}]:{l,u} }}</DisplayString> ...ok (legal nice)
<DisplayString>{{ [{p,s8}]:{l,u} }</DisplayString> ...ok (auto append missing end '}')
<DisplayString>{ [{p,s8}]:{l,u} }}</DisplayString> ...failed
<DisplayString>[{p,s8}]:{l,u}</DisplayString> ...ok
-->
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="estr">
		<Intrinsic Name="data" Expression="esdata"/>
		<Intrinsic Name="size" Expression="esize"/>
		<Intrinsic Name="capacity" Expression="esize+2"/>
			<DisplayString Condition="(unsigned)size()==0xCCCCCCCC">!! [invalid]</DisplayString>
			<DisplayString Condition="size()==~0">[{data(),su}]</DisplayString>
			<DisplayString >{size(),u} : [{data(),s8}]</DisplayString>
			<Expand>
				<Item Name="[capacity]">capacity()</Item>
				<Item Name="[size]">size()</Item>
				<Item Name="[str]">data()</Item>
				<ArrayItems>
					<Size>size()</Size>
					<ValuePointer>(unsigned char*)data()</ValuePointer>
				</ArrayItems>
			</Expand>
	</Type>
	
	<Type Name="estrs">
		<Intrinsic Name="data" Expression="esarg"/>
		<Intrinsic Name="size" Expression="esargc"/>
			<DisplayString Condition="(unsigned)size()==0xCCCCCCCC">!! [invalid]</DisplayString>
			<DisplayString >[{size(),u}]</DisplayString>
			<Expand>
				<Item Name="[size]" Condition="size()!=0">size()</Item>
				<ArrayItems>
					<Size>size()</Size>
					<ValuePointer>data()</ValuePointer>
				</ArrayItems>
			</Expand>
	</Type>
	
	<Type Name="ejson">
		<Intrinsic Name="name" Expression="ename"/>
		<Intrinsic Name="data" Expression="(char*)emap"/>
		<Intrinsic Name="origin" Expression="(char*)esori"/>
		<Intrinsic Name="orilen" Expression="strlen(esori)"/>
		<Intrinsic Name="value" Expression="(long long)emap"/>
		<Intrinsic Name="size" Expression="esttr&amp;0x00FFFFFF"/>
		<Intrinsic Name="attr" Expression="esttr&amp;0xFF000000"/>
		<Intrinsic Name="isv" Expression="(esttr&amp;0x0F000000)==0"/>
		<Intrinsic Name="isf" Expression="(esttr&amp;0x01000000)!=0"/>
		<Intrinsic Name="isbr" Expression="(esttr&amp;0x02000000)!=0"/>
		<Intrinsic Name="istr" Expression="(esttr&amp;0x04000000)!=0"/>
		<Intrinsic Name="isjs" Expression="(esttr&amp;0x08000000)!=0"/>
		<Intrinsic Name="isnew" Expression="(esttr&amp;0x10000000)!=0"/>
		<Intrinsic Name="isary" Expression="(esttr&amp;0x20000000)!=0"/>
		<Intrinsic Name="isnull" Expression="(esttr&amp;0x80000000)!=0"/>
			<DisplayString Condition="size()==0x00CCCCCC">!! [invalid]</DisplayString>
			<DisplayString Condition="isnull()">[{name(),s8} | Null]</DisplayString>
			<DisplayString Condition="isary()">[{name(),s8} {size(),u} | Array]</DisplayString>
		
			<DisplayString Condition="isv()">[{name(),s8} {value()} | Value]</DisplayString>
			<DisplayString Condition="isbr()">[{name(),s8} {value()==1} | Status]</DisplayString>
			<DisplayString Condition="istr()">[{name(),s8} {data(),s8} | String]</DisplayString>
			<DisplayString Condition="isf()">[{name(),s8} {data(),e} | Double]]</DisplayString>
			<DisplayString Condition="!name()">[{origin(),s8} {size(),u} | Param]</DisplayString>
			<DisplayString >[{name(),s8} {size(),u} | Object]</DisplayString>
			<Expand>
				<Item Name="[name]">name()</Item>
				<Item Name="[size]">size()</Item>
				
				<Item Name="[origin]" Condition="isv()&amp;&amp;!isary()">origin()</Item>
				<Item Name="[value]" Condition="isv()&amp;&amp;!isary()">amap</Item>
				<ArrayItems Condition="isv()&amp;&amp;!isary()">
					<Size>size()</Size>
					<ValuePointer>origin()</ValuePointer>
				</ArrayItems>
				
				<Item Name="[data]" Condition="istr()&amp;&amp;!isary()">data()</Item>
				<ArrayItems Condition="istr()&amp;&amp;!isary()">
					<Size>size()</Size>
					<ValuePointer>data()</ValuePointer>
				</ArrayItems>
				
				<ArrayItems Condition="isjs()||isary()">
					<Size>size()</Size>
					<ValuePointer>(ejson*)data()</ValuePointer>
				</ArrayItems>
			</Expand>
	</Type>
	
</AutoVisualizer>